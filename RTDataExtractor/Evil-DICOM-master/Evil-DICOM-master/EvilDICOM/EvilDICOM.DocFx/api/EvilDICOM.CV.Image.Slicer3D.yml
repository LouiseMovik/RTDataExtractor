### YamlMime:ManagedReference
items:
- uid: EvilDICOM.CV.Image.Slicer3D
  commentId: T:EvilDICOM.CV.Image.Slicer3D
  id: Slicer3D
  parent: EvilDICOM.CV.Image
  children:
  - EvilDICOM.CV.Image.Slicer3D.GetXPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  - EvilDICOM.CV.Image.Slicer3D.GetYPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  - EvilDICOM.CV.Image.Slicer3D.GetZPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  langs:
  - csharp
  - vb
  name: Slicer3D
  nameWithType: Slicer3D
  fullName: EvilDICOM.CV.Image.Slicer3D
  type: Class
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Image/Slicer3D.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM
    id: Slicer3D
    path: ../EvilDICOM.CV/Image/Slicer3D.cs
    startLine: 11
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Image
  syntax:
    content: 'public class Slicer3D : object'
    content.vb: >-
      Public Class Slicer3D
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: EvilDICOM.CV.Image.Slicer3D.GetZPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  commentId: M:EvilDICOM.CV.Image.Slicer3D.GetZPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  id: GetZPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  parent: EvilDICOM.CV.Image.Slicer3D
  langs:
  - csharp
  - vb
  name: GetZPlane(IMatrix, Double, Double, Double)
  nameWithType: Slicer3D.GetZPlane(IMatrix, Double, Double, Double)
  fullName: EvilDICOM.CV.Image.Slicer3D.GetZPlane(EvilDICOM.CV.Interfaces.IMatrix, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Image/Slicer3D.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM
    id: GetZPlane
    path: ../EvilDICOM.CV/Image/Slicer3D.cs
    startLine: 13
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Image
  syntax:
    content: public static Mat GetZPlane(IMatrix _mat, double z, double xiScale = null, double yiScale = null)
    parameters:
    - id: _mat
      type: EvilDICOM.CV.Interfaces.IMatrix
    - id: z
      type: System.Double
    - id: xiScale
      type: System.Double
    - id: yiScale
      type: System.Double
    return:
      type: Mat
    content.vb: Public Shared Function GetZPlane(_mat As IMatrix, z As Double, xiScale As Double = Nothing, yiScale As Double = Nothing) As Mat
  overload: EvilDICOM.CV.Image.Slicer3D.GetZPlane*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.CV.Image.Slicer3D.GetXPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  commentId: M:EvilDICOM.CV.Image.Slicer3D.GetXPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  id: GetXPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  parent: EvilDICOM.CV.Image.Slicer3D
  langs:
  - csharp
  - vb
  name: GetXPlane(IMatrix, Double, Double, Double)
  nameWithType: Slicer3D.GetXPlane(IMatrix, Double, Double, Double)
  fullName: EvilDICOM.CV.Image.Slicer3D.GetXPlane(EvilDICOM.CV.Interfaces.IMatrix, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Image/Slicer3D.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM
    id: GetXPlane
    path: ../EvilDICOM.CV/Image/Slicer3D.cs
    startLine: 52
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Image
  syntax:
    content: public static Mat GetXPlane(IMatrix _mat, double xPositionMM, double xiScale = null, double yiScale = null)
    parameters:
    - id: _mat
      type: EvilDICOM.CV.Interfaces.IMatrix
    - id: xPositionMM
      type: System.Double
    - id: xiScale
      type: System.Double
    - id: yiScale
      type: System.Double
    return:
      type: Mat
    content.vb: Public Shared Function GetXPlane(_mat As IMatrix, xPositionMM As Double, xiScale As Double = Nothing, yiScale As Double = Nothing) As Mat
  overload: EvilDICOM.CV.Image.Slicer3D.GetXPlane*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: EvilDICOM.CV.Image.Slicer3D.GetYPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  commentId: M:EvilDICOM.CV.Image.Slicer3D.GetYPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  id: GetYPlane(EvilDICOM.CV.Interfaces.IMatrix,System.Double,System.Double,System.Double)
  parent: EvilDICOM.CV.Image.Slicer3D
  langs:
  - csharp
  - vb
  name: GetYPlane(IMatrix, Double, Double, Double)
  nameWithType: Slicer3D.GetYPlane(IMatrix, Double, Double, Double)
  fullName: EvilDICOM.CV.Image.Slicer3D.GetYPlane(EvilDICOM.CV.Interfaces.IMatrix, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: EvilDICOM/EvilDICOM.CV/Image/Slicer3D.cs
      branch: master
      repo: https://github.com/rexcardan/Evil-DICOM
    id: GetYPlane
    path: ../EvilDICOM.CV/Image/Slicer3D.cs
    startLine: 97
  assemblies:
  - EvilDICOM.CV
  namespace: EvilDICOM.CV.Image
  syntax:
    content: public static Mat GetYPlane(IMatrix _mat, double yPositionMM, double xiScale = null, double yiScale = null)
    parameters:
    - id: _mat
      type: EvilDICOM.CV.Interfaces.IMatrix
    - id: yPositionMM
      type: System.Double
    - id: xiScale
      type: System.Double
    - id: yiScale
      type: System.Double
    return:
      type: Mat
    content.vb: Public Shared Function GetYPlane(_mat As IMatrix, yPositionMM As Double, xiScale As Double = Nothing, yiScale As Double = Nothing) As Mat
  overload: EvilDICOM.CV.Image.Slicer3D.GetYPlane*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: EvilDICOM.CV.Image
  commentId: N:EvilDICOM.CV.Image
  name: EvilDICOM.CV.Image
  nameWithType: EvilDICOM.CV.Image
  fullName: EvilDICOM.CV.Image
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EvilDICOM.CV.Image.Slicer3D.GetZPlane*
  commentId: Overload:EvilDICOM.CV.Image.Slicer3D.GetZPlane
  name: GetZPlane
  nameWithType: Slicer3D.GetZPlane
  fullName: EvilDICOM.CV.Image.Slicer3D.GetZPlane
- uid: EvilDICOM.CV.Interfaces.IMatrix
  commentId: T:EvilDICOM.CV.Interfaces.IMatrix
  parent: EvilDICOM.CV.Interfaces
  name: IMatrix
  nameWithType: IMatrix
  fullName: EvilDICOM.CV.Interfaces.IMatrix
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Mat
  isExternal: true
  name: Mat
  nameWithType: Mat
  fullName: Mat
- uid: EvilDICOM.CV.Interfaces
  commentId: N:EvilDICOM.CV.Interfaces
  name: EvilDICOM.CV.Interfaces
  nameWithType: EvilDICOM.CV.Interfaces
  fullName: EvilDICOM.CV.Interfaces
- uid: EvilDICOM.CV.Image.Slicer3D.GetXPlane*
  commentId: Overload:EvilDICOM.CV.Image.Slicer3D.GetXPlane
  name: GetXPlane
  nameWithType: Slicer3D.GetXPlane
  fullName: EvilDICOM.CV.Image.Slicer3D.GetXPlane
- uid: EvilDICOM.CV.Image.Slicer3D.GetYPlane*
  commentId: Overload:EvilDICOM.CV.Image.Slicer3D.GetYPlane
  name: GetYPlane
  nameWithType: Slicer3D.GetYPlane
  fullName: EvilDICOM.CV.Image.Slicer3D.GetYPlane
